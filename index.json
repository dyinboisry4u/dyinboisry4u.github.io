[{"categories":["daily note","scRNA-Seq","work"],"content":"Load cellbender filtered data to scanpy Fix cellbender data loading problems ","date":"2023-02-24","objectID":"/230224/:0:0","tags":["scRNA-Seq","scanpy","cellbender","python"],"title":"Load cellbender filtered data to scanpy","uri":"/230224/"},{"categories":["daily note","scRNA-Seq","work"],"content":"Problems On cellbender v0.2,2, here are 2 questions: Can not load cb output with sc.read_10_h5: scanpy v1.9.1 complains ValueError: Illegal slicing argument for scalar dataspace Releated issues: i. https://github.com/broadinstitute/CellBender/issues/174 ii. https://github.com/broadinstitute/CellBender/issues/128 CB filter data include “cells” with zero counts Releated issues: https://github.com/broadinstitute/CellBender/issues/111 ","date":"2023-02-24","objectID":"/230224/:1:0","tags":["scRNA-Seq","scanpy","cellbender","python"],"title":"Load cellbender filtered data to scanpy","uri":"/230224/"},{"categories":["daily note","scRNA-Seq","work"],"content":"Fix Load data Load data with below function anndata_from_h5: import tables import numpy as np import scipy.sparse as sp import anndata from typing import Dict, Optional def anndata_from_h5(file: str, analyzed_barcodes_only: bool = True) -\u003e 'anndata.AnnData': \"\"\"Load an output h5 file into an AnnData object for downstream work. Args: file: The h5 file analyzed_barcodes_only: False to load all barcodes, so that the size of the AnnData object will match the size of the input raw count matrix. True to load a limited set of barcodes: only those analyzed by the algorithm. This allows relevant latent variables to be loaded properly into adata.obs and adata.obsm, rather than adata.uns. Returns: adata: The anndata object, populated with inferred latent variables and metadata. \"\"\" d = dict_from_h5(file) X = sp.csc_matrix((d.pop('data'), d.pop('indices'), d.pop('indptr')), shape=d.pop('shape')).transpose().tocsr() # check and see if we have barcode index annotations, and if the file is filtered barcode_key = [k for k in d.keys() if (('barcode' in k) and ('ind' in k))] if len(barcode_key) \u003e 0: max_barcode_ind = d[barcode_key[0]].max() filtered_file = (max_barcode_ind \u003e= X.shape[0]) else: filtered_file = True if analyzed_barcodes_only: if filtered_file: # filtered file being read, so we don't need to subset print('Assuming we are loading a \"filtered\" file that contains only cells.') pass elif 'barcode_indices_for_latents' in d.keys(): X = X[d['barcode_indices_for_latents'], :] d['barcodes'] = d['barcodes'][d['barcode_indices_for_latents']] elif 'barcodes_analyzed_inds' in d.keys(): X = X[d['barcodes_analyzed_inds'], :] d['barcodes'] = d['barcodes'][d['barcodes_analyzed_inds']] else: print('Warning: analyzed_barcodes_only=True, but the key ' '\"barcodes_analyzed_inds\" or \"barcode_indices_for_latents\" ' 'is missing from the h5 file. ' 'Will output all barcodes, and proceed as if ' 'analyzed_barcodes_only=False') # Construct the anndata object. adata = anndata.AnnData(X=X, obs={'barcode': d.pop('barcodes').astype(str)}, var={'gene_name': (d.pop('gene_names') if 'gene_names' in d.keys() else d.pop('name')).astype(str)}, dtype=X.dtype) adata.obs.set_index('barcode', inplace=True) adata.var.set_index('gene_name', inplace=True) # For CellRanger v2 legacy format, \"gene_ids\" was called \"genes\"... rename this if 'genes' in d.keys(): d['id'] = d.pop('genes') # For purely aesthetic purposes, rename \"id\" to \"gene_id\" if 'id' in d.keys(): d['gene_id'] = d.pop('id') # If genomes are empty, try to guess them based on gene_id if 'genome' in d.keys(): if np.array([s.decode() == '' for s in d['genome']]).all(): if '_' in d['gene_id'][0].decode(): print('Genome field blank, so attempting to guess genomes based on gene_id prefixes') d['genome'] = np.array([s.decode().split('_')[0] for s in d['gene_id']], dtype=str) # Add other information to the anndata object in the appropriate slot. _fill_adata_slots_automatically(adata, d) # Add a special additional field to .var if it exists. if 'features_analyzed_inds' in adata.uns.keys(): adata.var['cellbender_analyzed'] = [True if (i in adata.uns['features_analyzed_inds']) else False for i in range(adata.shape[1])] if analyzed_barcodes_only: for col in adata.obs.columns[adata.obs.columns.str.startswith('barcodes_analyzed') | adata.obs.columns.str.startswith('barcode_indices')]: try: del adata.obs[col] except Exception: pass else: # Add a special additional field to .obs if all barcodes are included. if 'barcodes_analyzed_inds' in adata.uns.keys(): adata.obs['cellbender_analyzed'] = [True if (i in adata.uns['barcodes_analyzed_inds']) else False for i in range(adata.shape[0])] return adata def dict_from_h5(file: str) -\u003e Dict[str, np.ndarray]: \"\"\"Read in everything from an h5 file and put into a dictionary.\"\"\" d = {} with tables.open_file(file) as f: # read in everything for array in f.walk_nodes(\"/\", \"Array\"): d[array.name] = array.read() return d def _fill_adata_slots_automatically(adata, d): \"\"\"Add other information to t","date":"2023-02-24","objectID":"/230224/:2:0","tags":["scRNA-Seq","scanpy","cellbender","python"],"title":"Load cellbender filtered data to scanpy","uri":"/230224/"},{"categories":["daily note"],"content":"iTerm2 shell integration iTerm2 may be integrated with the unix shell so that it can keep track of your command history, current working directory, host name, and more—even over ssh. This enables several useful features. ","date":"2023-02-23","objectID":"/230223/:0:0","tags":["iTerm2","Linux"],"title":"iTerm2 Shell Integration","uri":"/230223/"},{"categories":["daily note"],"content":"Install NOTE: first ssh your server Select the iTerm2\u003eInstall Shell Integration menu item Select Continue and select the second install way Internet-free Install Select Continue until install finished ","date":"2023-02-23","objectID":"/230223/:1:0","tags":["iTerm2","Linux"],"title":"iTerm2 Shell Integration","uri":"/230223/"},{"categories":["daily note"],"content":"Features iTerm2 Documentation: Documentation For me, 2 features are very useful: imgcat: display one or more images inline Download and Upload: i. You can right-click on a filename (e.g., in the output of ls) and select Download with scp from hostname**, and iTerm2 will download the file for you. ii. If you drop a file (e.g., from Finder) into iTerm2 while holding the option key, iTerm2 will offer to upload the file via scp to the remote host into the directory you were in on the line you dropped the file on. ","date":"2023-02-23","objectID":"/230223/:2:0","tags":["iTerm2","Linux"],"title":"iTerm2 Shell Integration","uri":"/230223/"},{"categories":["daily note"],"content":"Hi, here is my first post I’ll record my study and something on here So today is a new day ","date":"2023-02-15","objectID":"/230222/:0:0","tags":["hugo"],"title":"My first Post","uri":"/230222/"},{"categories":["daily note"],"content":"morning eat eat ","date":"2023-02-15","objectID":"/230222/:1:0","tags":["hugo"],"title":"My first Post","uri":"/230222/"},{"categories":["daily note"],"content":"afternoon sleep sleep ","date":"2023-02-15","objectID":"/230222/:2:0","tags":["hugo"],"title":"My first Post","uri":"/230222/"},{"categories":["daily note"],"content":"evening echo \"hi\" print(\"hi\") print(\"hi\") print \"hi\" ","date":"2023-02-15","objectID":"/230222/:3:0","tags":["hugo"],"title":"My first Post","uri":"/230222/"}]